version: '3.8'

services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PORT=3000
      - API_TOKEN=${API_TOKEN:-secure-api-token}
      - WORKER_CONCURRENCY=5
      - LOG_LEVEL=info
      - DASHBOARD_USER=${DASHBOARD_USER:-admin}
      - DASHBOARD_PASS=${DASHBOARD_PASS:-admin}
    depends_on:
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  worker:
    build: .
    command: node dist/worker.js
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WORKER_CONCURRENCY=5
      - WORKER_RATE_LIMIT_MAX=5
      - WORKER_RATE_LIMIT_DURATION=1000
      - LOG_LEVEL=info
    depends_on:
      - redis
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  redis-data: